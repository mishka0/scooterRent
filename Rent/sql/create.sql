-- MySQL Script generated by MySQL Workbench
-- Fri Jun 26 16:56:03 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema rent
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema rent
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `rent` DEFAULT CHARACTER SET utf8 ;
USE `rent` ;

-- -----------------------------------------------------
-- Table `rent`.`addition`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `rent`.`addition` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(30) NULL,
  `last_name` VARCHAR(30) NULL,
  `phone` VARCHAR(15) NULL,
  `discount` INT NOT NULL DEFAULT 0,
  `balance` DOUBLE NOT NULL DEFAULT 0.00,
  PRIMARY KEY (`user_id`),
  CONSTRAINT `fk_addition_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `rent`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `rent`.`history`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `rent`.`history` (
  `history_id` INT NOT NULL AUTO_INCREMENT,
  `scooter_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `date_of_ride` DATE NOT NULL,
  `time_ride` BIGINT NOT NULL,
  `final_cost` DOUBLE NOT NULL,
  `is_subscription` TINYINT(1) NOT NULL,
  PRIMARY KEY (`history_id`),
  INDEX `fk_history_scooter1_idx` (`scooter_id` ASC) VISIBLE,
  INDEX `fk_history_user1_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_history_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `rent`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_history_scooter1`
    FOREIGN KEY (`scooter_id`)
    REFERENCES `rent`.`scooter` (`scooter_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `rent`.`rental_point`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `rent`.`rental_point` (
  `point_id` INT NOT NULL AUTO_INCREMENT,
  `address` VARCHAR(45) NOT NULL,
  `town_id` INT NOT NULL,
  PRIMARY KEY (`point_id`),
  INDEX `fk_rental_point_town1_idx` (`town_id` ASC) VISIBLE,
  CONSTRAINT `fk_rental_point_town1`
    FOREIGN KEY (`town_id`)
    REFERENCES `rent`.`town` (`town_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `rent`.`role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `rent`.`role` (
  `role_id` INT NOT NULL AUTO_INCREMENT,
  `role` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`role_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `rent`.`scooter`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `rent`.`scooter` (
  `scooter_id` INT NOT NULL AUTO_INCREMENT,
  `model` VARCHAR(45) NOT NULL,
  `rental_point_id` INT NULL,
  `status_id` INT NOT NULL,
  PRIMARY KEY (`scooter_id`),
  INDEX `fk_scooter_rental_point1_idx` (`rental_point_id` ASC) VISIBLE,
  INDEX `status_fk_idx` (`status_id` ASC) VISIBLE,
  CONSTRAINT `fk_scooter_rental_point1`
    FOREIGN KEY (`rental_point_id`)
    REFERENCES `rent`.`rental_point` (`point_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `status_fk`
    FOREIGN KEY (`status_id`)
    REFERENCES `rent`.`status_scooter` (`status_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `rent`.`status_scooter`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `rent`.`status_scooter` (
  `name` VARCHAR(45) NOT NULL,
  `status_id` INT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`status_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `rent`.`subscription`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `rent`.`subscription` (
  `subscription_id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `time_left` BIGINT NOT NULL,
  `subs_info_id` INT NOT NULL,
  PRIMARY KEY (`subscription_id`),
  INDEX `fk_subscription_info1_idx` (`subs_info_id` ASC) VISIBLE,
  CONSTRAINT `fk_subscription_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `rent`.`user` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_subscription_info1`
    FOREIGN KEY (`subs_info_id`)
    REFERENCES `rent`.`subscription_info` (`subscription_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `rent`.`subscription_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `rent`.`subscription_info` (
  `subscription_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `cost` DOUBLE NOT NULL,
  `time` BIGINT NOT NULL,
  PRIMARY KEY (`subscription_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `rent`.`tariff`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `rent`.`tariff` (
  `tariff_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `cost` DOUBLE NOT NULL,
  `duration` BIGINT NOT NULL,
  PRIMARY KEY (`tariff_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `rent`.`town`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `rent`.`town` (
  `town_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`town_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `rent`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `rent`.`user` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `login` VARCHAR(45) NOT NULL,
  `password` VARCHAR(60) NOT NULL,
  UNIQUE INDEX `login_UNIQUE` (`login` ASC) VISIBLE,
  PRIMARY KEY (`user_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `rent`.`user_role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `rent`.`user_role` (
  `role_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  INDEX `fk_users_roles_user_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_users_roles_roles1_idx` (`role_id` ASC) VISIBLE,
  PRIMARY KEY (`role_id`, `user_id`),
  CONSTRAINT `fk_users_roles_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `rent`.`user` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_users_roles_roles1`
    FOREIGN KEY (`role_id`)
    REFERENCES `rent`.`role` (`role_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Data for table `rent`.`addition`
-- -----------------------------------------------------
START TRANSACTION;
USE `rent`;
INSERT INTO `rent`.`addition` (`user_id`, `first_name`, `last_name`, `phone`, `discount`, `balance`) VALUES (DEFAULT, 'Admin', 'Adminovich', '+375292224455', 100, 99999);
INSERT INTO `rent`.`addition` (`user_id`, `first_name`, `last_name`, `phone`, `discount`, `balance`) VALUES (DEFAULT, 'Moder', 'Moderovich', '+375331112233', 0, 0);
INSERT INTO `rent`.`addition` (`user_id`, `first_name`, `last_name`, `phone`, `discount`, `balance`) VALUES (DEFAULT, 'Ilya', 'Ivanov', '+375112233333', 0, 1000);
INSERT INTO `rent`.`addition` (`user_id`, `first_name`, `last_name`, `phone`, `discount`, `balance`) VALUES (DEFAULT, 'Michail', 'Sidorov', '+375665558833', 5, 2000);
INSERT INTO `rent`.`addition` (`user_id`, `first_name`, `last_name`, `phone`, `discount`, `balance`) VALUES (DEFAULT, 'Vasiliy', 'Voevodov', '+375001112233', 0, 500);
INSERT INTO `rent`.`addition` (`user_id`, `first_name`, `last_name`, `phone`, `discount`, `balance`) VALUES (DEFAULT, 'Kiz', 'Kizonov', '+358912392402', 0, 0);

COMMIT;


-- -----------------------------------------------------
-- Data for table `rent`.`history`
-- -----------------------------------------------------
START TRANSACTION;
USE `rent`;
INSERT INTO `rent`.`history` (`history_id`, `scooter_id`, `user_id`, `date_of_ride`, `time_ride`, `final_cost`, `is_subscription`) VALUES (DEFAULT, 1, 3, '2020:06:19', 600000000000, 45, 0);
INSERT INTO `rent`.`history` (`history_id`, `scooter_id`, `user_id`, `date_of_ride`, `time_ride`, `final_cost`, `is_subscription`) VALUES (DEFAULT, 2, 5, '2020:06:19', 90000000, 44, 0);
INSERT INTO `rent`.`history` (`history_id`, `scooter_id`, `user_id`, `date_of_ride`, `time_ride`, `final_cost`, `is_subscription`) VALUES (DEFAULT, 3, 4, '2020:06:19', 90000000, 0, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `rent`.`rental_point`
-- -----------------------------------------------------
START TRANSACTION;
USE `rent`;
INSERT INTO `rent`.`rental_point` (`point_id`, `address`, `town_id`) VALUES (1, 'prospekt Kosmonavtov 2', 4);
INSERT INTO `rent`.`rental_point` (`point_id`, `address`, `town_id`) VALUES (2, 'prospekt Kleckova 18', 4);
INSERT INTO `rent`.`rental_point` (`point_id`, `address`, `town_id`) VALUES (3, 'vulica Shorsa 88', 4);
INSERT INTO `rent`.`rental_point` (`point_id`, `address`, `town_id`) VALUES (4, 'vylica Pobedi 22', 4);
INSERT INTO `rent`.`rental_point` (`point_id`, `address`, `town_id`) VALUES (DEFAULT, 'pereulok Fanipolskiy 53', 5);
INSERT INTO `rent`.`rental_point` (`point_id`, `address`, `town_id`) VALUES (DEFAULT, 'ulitsa mikhasya lynkova 87/2', 5);
INSERT INTO `rent`.`rental_point` (`point_id`, `address`, `town_id`) VALUES (DEFAULT, 'ul leonida bedy 34', 5);

COMMIT;


-- -----------------------------------------------------
-- Data for table `rent`.`role`
-- -----------------------------------------------------
START TRANSACTION;
USE `rent`;
INSERT INTO `rent`.`role` (`role_id`, `role`) VALUES (DEFAULT, 'ADMIN');
INSERT INTO `rent`.`role` (`role_id`, `role`) VALUES (DEFAULT, 'USER');
INSERT INTO `rent`.`role` (`role_id`, `role`) VALUES (DEFAULT, 'MODER');

COMMIT;


-- -----------------------------------------------------
-- Data for table `rent`.`scooter`
-- -----------------------------------------------------
START TRANSACTION;
USE `rent`;
INSERT INTO `rent`.`scooter` (`scooter_id`, `model`, `rental_point_id`, `status_id`) VALUES (DEFAULT, 'Kugoo S3', 1, 1);
INSERT INTO `rent`.`scooter` (`scooter_id`, `model`, `rental_point_id`, `status_id`) VALUES (DEFAULT, 'Kugoo S3', 1, 2);
INSERT INTO `rent`.`scooter` (`scooter_id`, `model`, `rental_point_id`, `status_id`) VALUES (DEFAULT, 'Kugoo S3', 1, 3);
INSERT INTO `rent`.`scooter` (`scooter_id`, `model`, `rental_point_id`, `status_id`) VALUES (DEFAULT, 'Kugoo S3', 1, 4);
INSERT INTO `rent`.`scooter` (`scooter_id`, `model`, `rental_point_id`, `status_id`) VALUES (DEFAULT, 'Kugoo S3', 1, 5);
INSERT INTO `rent`.`scooter` (`scooter_id`, `model`, `rental_point_id`, `status_id`) VALUES (DEFAULT, 'Kugoo S3', 1, 6);
INSERT INTO `rent`.`scooter` (`scooter_id`, `model`, `rental_point_id`, `status_id`) VALUES (DEFAULT, 'Kugoo S3', 5, 1);
INSERT INTO `rent`.`scooter` (`scooter_id`, `model`, `rental_point_id`, `status_id`) VALUES (DEFAULT, 'Kugoo S3', 5, 1);
INSERT INTO `rent`.`scooter` (`scooter_id`, `model`, `rental_point_id`, `status_id`) VALUES (DEFAULT, 'Kugoo S3', 5, 1);
INSERT INTO `rent`.`scooter` (`scooter_id`, `model`, `rental_point_id`, `status_id`) VALUES (DEFAULT, 'Kugoo S3', 5, 1);
INSERT INTO `rent`.`scooter` (`scooter_id`, `model`, `rental_point_id`, `status_id`) VALUES (DEFAULT, 'Kugoo S3', 5, 1);
INSERT INTO `rent`.`scooter` (`scooter_id`, `model`, `rental_point_id`, `status_id`) VALUES (DEFAULT, 'Kugoo S3', 2, 1);
INSERT INTO `rent`.`scooter` (`scooter_id`, `model`, `rental_point_id`, `status_id`) VALUES (DEFAULT, 'Kugoo S3', 2, 1);
INSERT INTO `rent`.`scooter` (`scooter_id`, `model`, `rental_point_id`, `status_id`) VALUES (DEFAULT, 'Kugoo S3', 2, 1);
INSERT INTO `rent`.`scooter` (`scooter_id`, `model`, `rental_point_id`, `status_id`) VALUES (DEFAULT, 'Kugoo S3', 2, 1);
INSERT INTO `rent`.`scooter` (`scooter_id`, `model`, `rental_point_id`, `status_id`) VALUES (DEFAULT, 'Kugoo S3', 2, 3);

COMMIT;


-- -----------------------------------------------------
-- Data for table `rent`.`status_scooter`
-- -----------------------------------------------------
START TRANSACTION;
USE `rent`;
INSERT INTO `rent`.`status_scooter` (`name`, `status_id`) VALUES ('Stay', DEFAULT);
INSERT INTO `rent`.`status_scooter` (`name`, `status_id`) VALUES ('Broken', DEFAULT);
INSERT INTO `rent`.`status_scooter` (`name`, `status_id`) VALUES ('Need repair', DEFAULT);
INSERT INTO `rent`.`status_scooter` (`name`, `status_id`) VALUES ('Need charge', DEFAULT);
INSERT INTO `rent`.`status_scooter` (`name`, `status_id`) VALUES ('Ride', DEFAULT);
INSERT INTO `rent`.`status_scooter` (`name`, `status_id`) VALUES ('Reserve', DEFAULT);

COMMIT;


-- -----------------------------------------------------
-- Data for table `rent`.`subscription`
-- -----------------------------------------------------
START TRANSACTION;
USE `rent`;
INSERT INTO `rent`.`subscription` (`subscription_id`, `user_id`, `time_left`, `subs_info_id`) VALUES (1, 3, 500000000000, 1);
INSERT INTO `rent`.`subscription` (`subscription_id`, `user_id`, `time_left`, `subs_info_id`) VALUES (2, 4, 600000000000, 1);
INSERT INTO `rent`.`subscription` (`subscription_id`, `user_id`, `time_left`, `subs_info_id`) VALUES (3, 5, 900000000000, 1);
INSERT INTO `rent`.`subscription` (`subscription_id`, `user_id`, `time_left`, `subs_info_id`) VALUES (4, 4, 900000000000, 4);

COMMIT;


-- -----------------------------------------------------
-- Data for table `rent`.`subscription_info`
-- -----------------------------------------------------
START TRANSACTION;
USE `rent`;
INSERT INTO `rent`.`subscription_info` (`subscription_id`, `name`, `cost`, `time`) VALUES (1, 'One hour subscription', 45, 3600000000000);
INSERT INTO `rent`.`subscription_info` (`subscription_id`, `name`, `cost`, `time`) VALUES (2, 'Five hour subscrtiption', 220, 18000000000000);
INSERT INTO `rent`.`subscription_info` (`subscription_id`, `name`, `cost`, `time`) VALUES (3, 'Ten hour subscription ', 400, 36000000000000);
INSERT INTO `rent`.`subscription_info` (`subscription_id`, `name`, `cost`, `time`) VALUES (4, 'One day subscription', 750, 86400000000000);

COMMIT;


-- -----------------------------------------------------
-- Data for table `rent`.`tariff`
-- -----------------------------------------------------
START TRANSACTION;
USE `rent`;
INSERT INTO `rent`.`tariff` (`tariff_id`, `name`, `cost`, `duration`) VALUES (1, 'Minutes', 0.2, 60000000000);
INSERT INTO `rent`.`tariff` (`tariff_id`, `name`, `cost`, `duration`) VALUES (DEFAULT, '10 minutes', 18, 600000000000);
INSERT INTO `rent`.`tariff` (`tariff_id`, `name`, `cost`, `duration`) VALUES (DEFAULT, '1 hour', 50, 6000000000000);

COMMIT;


-- -----------------------------------------------------
-- Data for table `rent`.`town`
-- -----------------------------------------------------
START TRANSACTION;
USE `rent`;
INSERT INTO `rent`.`town` (`town_id`, `name`) VALUES (1, 'Brest');
INSERT INTO `rent`.`town` (`town_id`, `name`) VALUES (2, 'Vitebsk');
INSERT INTO `rent`.`town` (`town_id`, `name`) VALUES (3, 'Gomel');
INSERT INTO `rent`.`town` (`town_id`, `name`) VALUES (4, 'Grodno');
INSERT INTO `rent`.`town` (`town_id`, `name`) VALUES (5, 'Minsk');
INSERT INTO `rent`.`town` (`town_id`, `name`) VALUES (6, 'Mogilev');

COMMIT;


-- -----------------------------------------------------
-- Data for table `rent`.`user`
-- -----------------------------------------------------
START TRANSACTION;
USE `rent`;
INSERT INTO `rent`.`user` (`user_id`, `login`, `password`) VALUES (DEFAULT, 'admin', '$2a$10$0L8lKyZ02zyJdQ3RNgXIhOJFs07oGSjz6ov4ba0nlrM6rWt9SSOSO');
INSERT INTO `rent`.`user` (`user_id`, `login`, `password`) VALUES (DEFAULT, 'moder', '$2a$10$Eaz1fwU/Rn7yMms1o9Ej2ubZ/E4lyv3zQmYysSxFSy983ZNMohh8.');
INSERT INTO `rent`.`user` (`user_id`, `login`, `password`) VALUES (DEFAULT, 'ilya777', '$2a$10$hGQPNwz.aFBsbH3GCOHcN.KZELVJ6QfQBog3bZ3C8/LPbZjtmX1W6');
INSERT INTO `rent`.`user` (`user_id`, `login`, `password`) VALUES (DEFAULT, 'mishka0', '$2a$10$Zo5Qqa0ADZDcqHHgJQZ37ek4Nr5fNwm/dW0kGEPzCgAFxuSUAKTZu');
INSERT INTO `rent`.`user` (`user_id`, `login`, `password`) VALUES (DEFAULT, 'vasya999', '$2a$10$5gHOSM50nH78rhEUZPgk0.rZ4WoVsvh/sgEmfqn6csG4FQFEww8hu');
INSERT INTO `rent`.`user` (`user_id`, `login`, `password`) VALUES (DEFAULT, 'kiz21', '$2a$10$1CwDDjS1UU3Z2GXJPaTWtOfqhyKkCrMLXOw0izlMeYIGeJ7L0Mg6G');

COMMIT;


-- -----------------------------------------------------
-- Data for table `rent`.`user_role`
-- -----------------------------------------------------
START TRANSACTION;
USE `rent`;
INSERT INTO `rent`.`user_role` (`role_id`, `user_id`) VALUES (1, 1);
INSERT INTO `rent`.`user_role` (`role_id`, `user_id`) VALUES (3, 2);
INSERT INTO `rent`.`user_role` (`role_id`, `user_id`) VALUES (2, 3);
INSERT INTO `rent`.`user_role` (`role_id`, `user_id`) VALUES (2, 4);
INSERT INTO `rent`.`user_role` (`role_id`, `user_id`) VALUES (2, 5);
INSERT INTO `rent`.`user_role` (`role_id`, `user_id`) VALUES (2, 6);
INSERT INTO `rent`.`user_role` (`role_id`, `user_id`) VALUES (3, 1);

COMMIT;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
